1.
线程- 新建-(start)-就绪-(run)-运行-(run完)-死亡  || 阻塞(让出cpu资源) || 资源调度(获取cpu资源)


2.
带优先级

3.
实现runnable
继承thread


4.
Socket的setSoTimeout方法，用于设置读取超时，单位是毫秒。
默认情况下，值为0，即无限等待直到读取数据。如果设置为一个合理的值，比如30000，则读取超时为30秒，
即30秒之后，如果数据还未到达，则抛出一个超时异常。
HTTP和JDBC底层都是基于TCP的Socket机制实现，所以不管是HTTP客户端，还是JDBC客户端，一般都会提供这个参数的配置。

Socket编程一般都是多进程编程（服务端和客户端），
多线程编程（Socket发送接收一般都是独立线程）的综合。


5. 饥饿:永远轮不到
   活锁:谦让
   死锁:互相抢占


6.
在Java中一共有四种方法支持同步，其中前三个是同步方法，一个是管道方法。
（1）wait() / notify()方法/ notify all
（2）await() / signal()方法
（3）BlockingQueue阻塞队列方法
（4）PipedInputStream / PipedOutputStream



7. yeild join

理论上，yield意味着放手，放弃，投降。
一个调用yield()方法的线程告诉虚拟机它乐意让其他线程占用自己的位置。
这表明该线程没有在做一些紧急的事情。注意，这仅是一个暗示，并不能保证不会产生任何影响。
仅能使一个线程从运行状态转到可运行状态，而不是等待或阻塞状态

8. Thread t = new Thread(new Runnable, "线程名字")